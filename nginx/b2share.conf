server {
        listen 80;
        charset utf-8;

        server_tokens           off;

        # Use 'set' so NGINX Container can start even if B2SHARE service is not up
        set $b2shareapi "b2share-api";
        set $b2sharefiles "b2share-files";

        # Resolver has to be defined when using variables in proxy_pass
        # 'valid=5s' will force NGINX to resolve the variable when
        # 5s TTL has passed. If not provided TTL will be whatever DNS server
        # responded with.
        # Note that 127.0.0.11 might not be portable and could be Docker specific.
        resolver 127.0.0.11 valid=5s;
        
        location = /health {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
        }

        location /oai2d {
                proxy_pass http://$b2shareapi:5000/api/oai2d;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
                return 301 https://$http_host$request_uri;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
                root /usr/share/nginx/html;
        }
}

server {
        listen 443 ssl;
        charset utf-8;
        ssl_certificate         /etc/ssl/b2share.crt;
        ssl_certificate_key     /etc/ssl/b2share.key;
        ssl_protocols           TLSv1.2 TLSv1.3;
        ssl_ciphers             !aNULL:!MD5:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        client_body_timeout 600s;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Use 'set' so NGINX Container can start even if B2SHARE service is not up
        set $b2shareapi "b2share-api";
        set $b2sharefiles "b2share-files";

        # Resolver has to be defined when using variables in proxy_pass
        # 'valid=5s' will force NGINX to resolve the variable when
        # 5s TTL has passed. If not provided TTL will be whatever DNS server
        # responded with.
        # Note that 127.0.0.11 might not be portable and could be Docker specific.
        resolver 127.0.0.11 valid=5s;

        location /api/files {
                proxy_pass http://$b2sharefiles:5000;
                proxy_request_buffering off;
                proxy_max_temp_file_size 0;
                client_max_body_size 1000g;
        }

        location / {
                proxy_pass http://$b2shareapi:5000;
                client_max_body_size 100m;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
                root /usr/share/nginx/html;
        }
}
